{"version":3,"sources":["components/content/tasks/TodoList.module.scss","components/content/login/Login.module.scss","styles/grid-1.1s-200px.svg","api/todoApi.ts","components/selectors/selectors.tsx","store/app/appReducer.ts","store/tasks/tasksReducer.ts","store/todolist/todolistReducer.ts","store/store.ts","store/index.tsx","components/common/alertComponent/alertComponent.tsx","components/common/form/AddItemForm.tsx","components/common/input/InputSpan.tsx","components/common/navbar/NavBar.tsx","components/header/Header.tsx","components/content/tasks/task/Task.tsx","components/content/tasks/TodoList.tsx","components/content/todolist/CreateTodoList.tsx","components/content/login/Login.tsx","components/content/Content.tsx","App.tsx","index.tsx","components/header/Header.module.scss","components/common/alertComponent/alertComponent.module.scss","components/content/todolist/CreateTodoList.module.scss"],"names":["module","exports","TaskPriorities","TaskStatuses","initialSelect","state","app","initApp","alertSelect","alertContent","progresSelector","progressLoading","authSelector","authMe","todolistArraySelector","todolist","allTaskSelector","tasks","instance","axios","create","baseURL","withCredentials","headers","TodolistApi","get","then","res","newTitle","post","title","data","id","delete","put","TaskApi","idList","idTask","newTask","LoginApi","configAlert","type","message","v1","authMeThunk","createAsyncThunk","arg","thunkAPI","a","resultCode","dispatch","setDataAction","dataUser","value","rejectWithValue","error","loginThunk","initAppAction","setAlertAction","alert","messages","logoutThunk","slice","createSlice","name","initialState","reducers","action","payload","push","removeAlertAction","filter","el","extraReducers","builder","addCase","fulfilled","AppReducer","reducer","actions","getTaskThunk","status","items","statusText","addTaskThunk","params","nameTask","item","todoListId","removeTaskThunk","getState","find","taskId","setDisabledAction","updateTaskThunk","task","update","Object","keys","join","apiModel","addedDate","description","priority","order","startDate","deadline","statusProcess","map","TasksReducer","getTodolistThunk","todolists","errors","addTodolistThunk","newTodolist","removeTodolistThunk","disabledAction","idTodolist","chengeNameTodolistThunk","param","text","newTitleTodolist","chengeFilterTodolistAction","index","findIndex","newfilterTodolist","entiryStatus","TodolistReducer","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","ThunkMiddleware","useActions","useDispatch","useMemo","bindActionCreators","window","todolistActions","tasksActions","appActions","AlertComponent","React","memo","alertList","onCloseAlert","useEffect","newAlertList","length","setTimeout","className","styles","alert__block","Alert","severity","onClose","key","AlertTitle","AddItemForm","addTask","useState","valueInput","setValueInput","style","textSpan","errorInput","setErrorInput","sendNewTask","trim","Grid","xs","Paper","elevation","padding","TextField","fullWidth","disabled","margin","onChange","e","target","onKeyPress","charCode","Button","variant","color","onClick","Typography","InputSpan","onChengeTitleHendler","flag","setFlag","newText","setNewText","onDoubleClick","NavBar","show","setValue","addTodoList","useCallback","Drawer","anchor","hideBackdrop","open","container","spacing","Header","progress","useSelector","selectors","auth","AppBar","position","header","Toolbar","header__inner","header__menu","IconButton","header__icon","edge","aria-label","header__btn","LinearProgress","progressbar","Task","removeTask","chengeTaskTitle","chengeStatus","onChengeTaskTitleHendler","ListItem","display","justifyContent","CircularProgress","size","Checkbox","TodoList","chengeFilter","chengeTitle","removeTodoList","filterForTasks","buttonFilter","marginBottom","undefined","List","ButtonGroup","alignItems","CreateTodoList","todolistArray","allTasks","todolist__items","to","Login","formik","useFormik","initialValues","email","password","rememderMe","validate","values","onSubmit","justify","login","handleSubmit","FormControl","FormLabel","FormGroup","label","handleChange","FormControlLabel","control","Switch","Content","path","component","App","initial","height","src","loading","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5ef0584.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolist\":\"TodoList_todolist___28mP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3D9O4\"};","module.exports = __webpack_public_path__ + \"static/media/grid-1.1s-200px.82b1d7ed.svg\";","import axios from 'axios'\r\n\r\nimport {DataLogin} from \"../components/content/login/Login\";\r\n\r\n\r\nexport type ServTodoListType = {\r\n    id: string\r\n    title: string\r\n    addedDate: string\r\n    order: number\r\n}\r\n\r\nexport type ServTaskType = {\r\n    addedDate: string\r\n    deadline: string | null\r\n    description: string | null\r\n    id: string\r\n    order: number\r\n    priority: TaskPriorities\r\n    startDate: string | null\r\n    status: TaskStatuses\r\n    title: string\r\n    todoListId: string\r\n}\r\n\r\nexport enum TaskPriorities {\r\n    Low = 0,\r\n    Middle = 1,\r\n    Hi = 2,\r\n    Urgently = 3,\r\n    Later = 4\r\n}\r\n\r\nexport enum TaskStatuses {\r\n    New = 0,\r\n    InProgress = 1,\r\n    Complite = 2,\r\n    Draft = 3\r\n}\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": '9708f55c-7c56-4108-a0bf-76b37c22e7d1',\r\n    }\r\n})\r\n\r\n\r\nexport const TodolistApi = {\r\n    getTodolist() {\r\n        return instance.get(`/todo-lists`).then(res => res)\r\n    },\r\n    setTodolist(newTitle: string) {\r\n        return instance.post(`/todo-lists`, {title: newTitle}).then(res => res.data)\r\n    },\r\n    deleteTodolist(id: string) {\r\n        return instance.delete(`/todo-lists/${id}`).then(res => res.data)\r\n    },\r\n    updateTodolist(id: string, newTitle: string) {\r\n        return instance.put(`/todo-lists/${id}`, {title: newTitle}).then(res => res.data)\r\n    },\r\n    reorderTodolist(id: string, order: number) {\r\n        return instance.put(`/todo-lists/${id}`, {order: order}).then(res => res.data)\r\n    },\r\n\r\n}\r\n\r\nexport const TaskApi = {\r\n    getTask(idList: string) {\r\n        return instance.get(`/todo-lists/${idList}/tasks`).then(res => res)\r\n    },\r\n    setTask(idList: string, newTitle: string) {\r\n        return instance.post(`/todo-lists/${idList}/tasks`, {title: newTitle}).then(res => res.data)\r\n    },\r\n    deleteTask(idList: string, idTask: string) {\r\n        return instance.delete(`/todo-lists/${idList}/tasks/${idTask}`).then(res => res.data)\r\n    },\r\n    updateTask(idList: string, idTask: string, newTask: any) {\r\n        return instance.put(`/todo-lists/${idList}/tasks/${idTask}`, newTask).then(res => res.data)\r\n    },\r\n    reorderTask(idList: string, idTask: string, order: number) {\r\n        return instance.put(`/todo-lists/${idList}/tasks/${idTask}`, {orer: order}).then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const LoginApi = {\r\n    authMe() {\r\n        return instance.get('/auth/me').then(res => res.data)\r\n    },\r\n    login(data: DataLogin) {\r\n        return instance.post('/auth/login', {...data}).then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login').then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\n","import {AppRootState} from \"../../store/store\";\r\n\r\n//app\r\nexport const initialSelect = (state: AppRootState) => state.app.initApp\r\n\r\nexport const alertSelect = (state: AppRootState) => state.app.alertContent\r\n\r\n//header\r\nexport const progresSelector = (state: AppRootState) => state.app.progressLoading\r\nexport const authSelector = (state: AppRootState) => state.app.authMe\r\n\r\n//todolist\r\n\r\nexport const todolistArraySelector = (state: AppRootState) => state.todolist\r\nexport const allTaskSelector = (state: AppRootState) => state.tasks","import {createAsyncThunk, createSlice, PayloadAction, AsyncThunkAction} from \"@reduxjs/toolkit\";\r\nimport {DataLogin} from \"../../components/content/login/Login\";\r\nimport {LoginApi} from \"../../api/todoApi\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\nexport type AlertContentType = {\r\n    id: string\r\n    type: \"error\" | \"success\" | \"info\" | \"warning\"\r\n    title: string\r\n}\r\n\r\n\r\nexport const configAlert = (type: \"error\" | \"success\" | \"info\" | \"warning\", message: string) => ({\r\n    id: v1(),\r\n    type,\r\n    title: message\r\n})\r\n\r\nexport type DataUser = {\r\n    email: string\r\n    id: number\r\n    login: string\r\n}\r\n\r\n\r\n//thunks\r\n\r\nexport const authMeThunk = createAsyncThunk('app/authMeThunk', async (arg, thunkAPI) => {\r\n        try {\r\n            let res = await LoginApi.authMe()\r\n            if (res.resultCode === 0) {\r\n                thunkAPI.dispatch(setDataAction({dataUser: res.data, value: true}))\r\n                return {value: true}\r\n            } else {\r\n                return {value: true}\r\n            }\r\n        } catch (err) {\r\n            thunkAPI.rejectWithValue({error: err.message})\r\n            return {value: true}\r\n        }\r\n    }\r\n)\r\n\r\nexport const loginThunk = createAsyncThunk('app/loginThunk', async (data: DataLogin, thunkAPI) => {\r\n    thunkAPI.dispatch(initAppAction({value: true}))\r\n    try {\r\n        let res = await LoginApi.login(data)\r\n        if (res.resultCode === 0) {\r\n            thunkAPI.dispatch(initAppAction({value: false}))\r\n            return {value: true}\r\n        } else {\r\n            thunkAPI.dispatch(setAlertAction({alert: configAlert('error', res.messages)}))\r\n            thunkAPI.dispatch(initAppAction({value: false}))\r\n            return thunkAPI.rejectWithValue({error: [res.messages]})\r\n        }\r\n    } catch (err) {\r\n        thunkAPI.dispatch(initAppAction({value: false}))\r\n        thunkAPI.dispatch(setAlertAction({alert: configAlert('error', err.message)}))\r\n        return thunkAPI.rejectWithValue({error: [err.message], })\r\n    }\r\n})\r\n\r\n\r\nexport const logoutThunk = createAsyncThunk('app/logoutThunk', async (arg, thunkAPI) => {\r\n    thunkAPI.dispatch(initAppAction({value: true}))\r\n    try {\r\n        let res = await LoginApi.logout()\r\n        if (res.resultCode === 0) {\r\n            thunkAPI.dispatch(initAppAction({value: false}))\r\n            return {value: false}\r\n        } else {\r\n            return thunkAPI.rejectWithValue({value: false})\r\n        }\r\n    } catch (err) {\r\n        thunkAPI.dispatch(setAlertAction({alert: configAlert('error', err.message)}))\r\n        return thunkAPI.rejectWithValue({error: err.message})\r\n    }\r\n})\r\n\r\n\r\n//reduser\r\n\r\nexport type initialStateType = {\r\n    initApp: boolean\r\n    progressLoading: boolean,\r\n    alertContent: AlertContentType[]\r\n    dataUser: DataUser | null\r\n    authMe: boolean\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    initApp: false,\r\n    progressLoading: false,\r\n    alertContent: [],\r\n    dataUser: null,\r\n    authMe: false\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setDataAction(state, action: PayloadAction<{ value: boolean, dataUser: DataUser }>) {\r\n            state.authMe = action.payload.value\r\n            state.dataUser = action.payload.dataUser\r\n        },\r\n        initAppAction(state, action: PayloadAction<{ value: boolean }>) {\r\n            state.progressLoading = action.payload.value\r\n        },\r\n        setAlertAction(state, action: PayloadAction<{ alert: AlertContentType }>) {\r\n            state.alertContent.push(action.payload.alert)\r\n        },\r\n        removeAlertAction(state, action: PayloadAction<{ id: string }>) {\r\n            state.alertContent = state.alertContent.filter(el => el.id !== action.payload.id)\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginThunk.fulfilled, (state, action) => {\r\n            state.authMe = action.payload.value\r\n        });\r\n        builder.addCase(logoutThunk.fulfilled, (state, action) => {\r\n            state.authMe = action.payload.value\r\n        });\r\n        builder.addCase(authMeThunk.fulfilled, (state, action) => {\r\n            state.initApp = action.payload.value\r\n        });\r\n    }\r\n})\r\n\r\n\r\nexport const AppReducer = slice.reducer\r\n\r\nexport const {setDataAction} = slice.actions\r\nexport const {initAppAction} = slice.actions\r\nexport const {setAlertAction} = slice.actions\r\nexport const {removeAlertAction} = slice.actions\r\n\r\n\r\n","import {ServTaskType, TaskApi, TaskPriorities, TaskStatuses} from \"../../api/todoApi\";\r\nimport {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {configAlert, setAlertAction} from \"../app/appReducer\";\r\nimport {AppRootState} from \"../store\";\r\n\r\nexport const getTaskThunk = createAsyncThunk('tasks/getTaskThunk', async (id: string, {dispatch, rejectWithValue}) => {\r\n    try {\r\n        let res = await TaskApi.getTask(id)\r\n        if (res.status === 200) {\r\n            return {tasks: res.data.items, id}\r\n        } else {\r\n            dispatch(setAlertAction({alert: configAlert('error', res.statusText)}))\r\n            return {}\r\n        }\r\n    } catch (error) {\r\n        return rejectWithValue({error: error.message})\r\n    }\r\n})\r\n\r\nexport const addTaskThunk = createAsyncThunk('tasks/addTaskThunk', async (params: {id: string, nameTask: string}, {dispatch, rejectWithValue}) => {\r\n    try {\r\n        let res = await  TaskApi.setTask(params.id, params.nameTask)\r\n        if (res.resultCode === 0) {\r\n            dispatch(setAlertAction({alert: configAlert('success', `Создан Task: ${params.nameTask}`)}))\r\n            return {id: res.data.item.todoListId, newTask: res.data.item}\r\n        } else {\r\n            dispatch(setAlertAction({alert: configAlert('error', res.statusText)}))\r\n            return {}\r\n        }\r\n    } catch (error) {\r\n        return rejectWithValue({error: error.message})\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const removeTaskThunk = createAsyncThunk('tasks/removeTaskThunk', async (\r\n    params: {id: string, taskId: string},\r\n    {dispatch, rejectWithValue, getState}) => {\r\n\r\n    const state = getState() as AppRootState\r\n    const item = state.tasks[params.id].find(el => el.id === params.taskId)\r\n\r\n    if (!item) {\r\n        return\r\n    }\r\n\r\n    dispatch(setDisabledAction({id: params.id, taskId: params.taskId, value: 'loading'}))\r\n    try {\r\n        let res = await   TaskApi.deleteTask(params.id, params.taskId)\r\n        if (res.resultCode === 0) {\r\n            dispatch(setAlertAction({alert: configAlert('success', `Удален Task: ${item.title}`)}))\r\n            return {id: params.id, taskId: params.taskId}\r\n        } else {\r\n            dispatch(setAlertAction({alert: configAlert('error', res.statusText)}))\r\n            return {}\r\n        }\r\n    } catch (error) {\r\n        return rejectWithValue({error: error.message})\r\n    }\r\n})\r\n\r\n\r\n\r\ntype ModelType = {\r\n    addedDate?: string\r\n    deadline?: string | null\r\n    description?: string | null\r\n    id?: string\r\n    order?: number\r\n    priority?: TaskPriorities\r\n    startDate?: string | null\r\n    status?: TaskStatuses\r\n    title?: string\r\n    todoListId?: string\r\n}\r\n\r\nexport const updateTaskThunk = createAsyncThunk('tasks/updateTaskThunk', async (\r\n    params: {id: string, taskId: string, update: ModelType},\r\n    {dispatch, getState, rejectWithValue}) => {\r\n\r\n    const state = getState() as AppRootState\r\n\r\n    const task = state.tasks[params.id].find((el: ModelType) => el.id === params.taskId)\r\n    if (!task) {\r\n        return\r\n    }\r\n\r\n    const update = Object.keys(params.update).join(' ')\r\n\r\n\r\n    const apiModel: TaskType = {\r\n        id: task.id,\r\n        title: task.title,\r\n        addedDate: task.addedDate,\r\n        description: task.description,\r\n        priority: task.priority,\r\n        order: task.order,\r\n        startDate: task.startDate,\r\n        todoListId: task.todoListId,\r\n        deadline: task.deadline,\r\n        status: task.status,\r\n        statusProcess: task.statusProcess,\r\n        ...params.update\r\n    }\r\n\r\n    dispatch(setDisabledAction({id: params.id, taskId: params.taskId, value: 'chengeStatus'}))\r\n\r\n    try {\r\n        let res = await TaskApi.updateTask(params.id, params.taskId, apiModel)\r\n        if (res.resultCode === 0) {\r\n            dispatch(setAlertAction({alert: configAlert('success', `Изменен ${update} Task: ${task.title}`)}))\r\n            return {id: params.id, taskId: params.taskId, task: apiModel}\r\n        } else {\r\n            dispatch(setAlertAction({alert: configAlert('error', res.statusText)}))\r\n            return {}\r\n        }\r\n    } catch (error) {\r\n        return rejectWithValue({error: error.message})\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type TaskType = ServTaskType & {\r\n    statusProcess: string\r\n}\r\n\r\n\r\nexport type StateTaskType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\nconst initialState: StateTaskType = {}\r\n\r\n\r\nconst slice = createSlice({\r\n    name: 'tasks',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setDisabledAction(state, action: PayloadAction<{ id: string, taskId: string, value: string }>) {\r\n            state[action.payload.id] = state[action.payload.id].map(el => {\r\n                if (el.id === action.payload.taskId) {\r\n                    el.statusProcess = action.payload.value\r\n                    return el\r\n                }\r\n                return el\r\n            })\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getTaskThunk.fulfilled, (state, action) => {\r\n            if (action.payload.id) {\r\n                state[action.payload.id] = action.payload.tasks\r\n            }\r\n        });\r\n        builder.addCase(addTaskThunk.fulfilled, (state, action) => {\r\n            if (action.payload) {\r\n                state[action.payload.id] = [...state[action.payload.id], action.payload.newTask]\r\n            }\r\n        });\r\n        builder.addCase(removeTaskThunk.fulfilled, (state, action) => {\r\n            if (action.payload?.id) {\r\n                state[action.payload.id] = state[action.payload.id].filter(el => el.id !== action.payload?.taskId)\r\n            }\r\n        });\r\n        builder.addCase(updateTaskThunk.fulfilled, (state, action) => {\r\n            if (action.payload?.id) {\r\n                state[action.payload.id] = state[action.payload.id].map(el => {\r\n                    if (el.id === action.payload?.taskId) {\r\n                        el = action.payload.task\r\n                        return el\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        });\r\n    }\r\n})\r\n\r\nexport const TasksReducer = slice.reducer\r\n\r\nexport const {setDisabledAction} = slice.actions\r\n\r\n","import {ServTodoListType, TodolistApi} from \"../../api/todoApi\";\r\nimport {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {AxiosError} from \"axios\";\r\nimport {configAlert, setAlertAction} from \"../app/appReducer\";\r\nimport {AppRootState} from \"../store\";\r\n\r\n\r\n\r\n//thunks\r\n\r\nexport const getTodolistThunk = createAsyncThunk('todolist/getTodolistThunk', async (arg, thunkAPI) => {\r\n        try {\r\n            let res = await TodolistApi.getTodolist()\r\n            return {todolists: res.data}\r\n        } catch (er) {\r\n            const error: AxiosError = er\r\n            thunkAPI.dispatch(setAlertAction({alert: configAlert('error', error.message)}))\r\n            return thunkAPI.rejectWithValue({errors: error.message})\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const addTodolistThunk = createAsyncThunk('todolist/addTodolistThunk', async (title: string, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    try {\r\n        let res = await TodolistApi.setTodolist(title)\r\n        if (res.resultCode === 0) {\r\n            dispatch(setAlertAction({alert: configAlert('success', `Создан Todolist: ${title}`)}))\r\n            return {newTodolist: res.data.item}\r\n        } else {\r\n            dispatch(setAlertAction({alert: configAlert('error', `${res.messages}`)}))\r\n            return {}\r\n        }\r\n    } catch (error) {\r\n        dispatch(setAlertAction({alert: configAlert('error', `${error.message}`)}))\r\n        return rejectWithValue({errors: error.message})\r\n    }\r\n})\r\n\r\n\r\nexport const removeTodolistThunk = createAsyncThunk('todolist/removeTodolistThunk', async (id: string, {\r\n    getState,\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    const state = getState() as AppRootState\r\n\r\n    const item = state.todolist.find(el => el.id === id)\r\n    if (!item) {\r\n        return\r\n    }\r\n    dispatch(disabledAction({idTodolist: item.id, value: 'loading'}))\r\n    try {\r\n        let res = await TodolistApi.deleteTodolist(id)\r\n        if (res.resultCode === 0) {\r\n            dispatch(setAlertAction({alert: configAlert('success', `Удален Todolist: ${item.title}`)}))\r\n            return {idTodolist: id}\r\n        } else {\r\n            dispatch(setAlertAction({alert: configAlert('error', res.messages)}))\r\n            return {}\r\n        }\r\n    } catch (error) {\r\n        dispatch(setAlertAction({alert: configAlert('error', error.message)}))\r\n        return rejectWithValue({errors: error.message})\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const chengeNameTodolistThunk = createAsyncThunk('todolist/chengeNameTodolistThunk', async (\r\n    param: { id: string, text: string },\r\n    {dispatch, rejectWithValue}) => {\r\n    try {\r\n        let res = await TodolistApi.updateTodolist(param.id, param.text)\r\n        if (res.resultCode === 0) {\r\n            dispatch(setAlertAction({alert: configAlert('success', `Изменен Todolist: ${param.text}`)}))\r\n            return {idTodolist: param.id, newTitleTodolist: param.text}\r\n        } else {\r\n            return\r\n        }\r\n    } catch (error) {\r\n        return rejectWithValue({errors: error.message})\r\n    }\r\n})\r\n\r\n\r\n//reduser\r\n\r\n\r\n\r\nexport type FilterValuesType = 'all' | 'complete' | 'active';\r\nexport type TodoListType = ServTodoListType & {\r\n    filter: FilterValuesType,\r\n    entiryStatus: string\r\n}\r\n\r\nconst initialState: Array<TodoListType> = []\r\n\r\n\r\nconst slice = createSlice({\r\n    name: 'todolist',\r\n    initialState: initialState,\r\n    reducers: {\r\n        chengeFilterTodolistAction(state, action: PayloadAction<{ idTodolist: string, newfilterTodolist: FilterValuesType }>) {\r\n            const index = state.findIndex(el => el.id === action.payload.idTodolist)\r\n            state[index].filter = action.payload.newfilterTodolist\r\n        },\r\n\r\n        disabledAction(state, action: PayloadAction<{ idTodolist: string, value: string }>) {\r\n            const index = state.findIndex(el => el.id === action.payload.idTodolist)\r\n            state[index].entiryStatus = action.payload.value\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getTodolistThunk.fulfilled, (state, action) => {\r\n            return action.payload.todolists.map((el: any) => {\r\n                el.filter = 'all'\r\n                el.entiryStatus = ''\r\n                return el\r\n            })\r\n        });\r\n        builder.addCase(addTodolistThunk.fulfilled, (state, action) => {\r\n            if (action.payload.newTodolist) {\r\n                return [...state, action.payload.newTodolist]\r\n            }\r\n        });\r\n        builder.addCase(removeTodolistThunk.fulfilled, (state, action) => {\r\n            if (action.payload) {\r\n                return state.filter(el => el.id !== action.payload?.idTodolist)\r\n            }\r\n        });\r\n        builder.addCase(chengeNameTodolistThunk.fulfilled, (state, action) => {\r\n            if (action.payload) {\r\n                const index = state.findIndex(el => el.id === action.payload?.idTodolist)\r\n                state[index].title = action.payload.newTitleTodolist\r\n            }\r\n        });\r\n    }\r\n})\r\n\r\n\r\nexport const TodolistReducer = slice.reducer\r\n\r\nexport const {chengeFilterTodolistAction} = slice.actions\r\nexport const {disabledAction} = slice.actions\r\n\r\n","import {ActionCreatorsMapObject, bindActionCreators, combineReducers} from \"redux\";\r\nimport {TasksReducer} from \"./tasks/tasksReducer\";\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport {AppReducer} from \"./app/appReducer\";\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport {TodolistReducer} from \"./todolist/todolistReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useMemo} from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    todolist: TodolistReducer,\r\n    tasks: TasksReducer,\r\n    app: AppReducer\r\n})\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(ThunkMiddleware)\r\n})\r\n\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport function useActions<T extends ActionCreatorsMapObject<any>>(action: T) {\r\n    const dispatch = useDispatch()\r\n    const boundActions = useMemo(() => {\r\n        return bindActionCreators(action, dispatch)\r\n    }, [])\r\n    return boundActions\r\n}\r\n\r\n\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import {getTodolistThunk, addTodolistThunk, removeTodolistThunk, chengeNameTodolistThunk, chengeFilterTodolistAction } from './todolist/todolistReducer';\r\nimport {addTaskThunk, removeTaskThunk, updateTaskThunk, getTaskThunk} from './tasks/tasksReducer';\r\nimport {loginThunk, authMeThunk, logoutThunk, removeAlertAction} from './app/appReducer'\r\n\r\nexport const todolistActions = {\r\n    getTodolistThunk, addTodolistThunk, removeTodolistThunk, chengeNameTodolistThunk, chengeFilterTodolistAction\r\n}\r\nexport const tasksActions = {\r\n    addTaskThunk, removeTaskThunk, updateTaskThunk, getTaskThunk\r\n}\r\nexport const appActions = {\r\n    loginThunk, authMeThunk, logoutThunk, removeAlertAction\r\n}\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {Alert, AlertTitle} from '@material-ui/lab';\r\nimport styles from './alertComponent.module.scss'\r\nimport { AlertContentType } from '../../../store/app/appReducer';\r\n\r\n\r\n\r\ntype AlertComponentType = {\r\n    alertList?: AlertContentType[]\r\n    onCloseAlert: (id: string) => void\r\n}\r\n\r\nexport const AlertComponent = React.memo(({alertList, onCloseAlert}: AlertComponentType) => {\r\n\r\n    useEffect(() => {\r\n        if (!alertList) {\r\n            return\r\n        }\r\n        let newAlertList = alertList.filter(el => el.type !== 'error')\r\n        if (newAlertList.length !== 0) {\r\n            setTimeout(() => {\r\n                onCloseAlert(newAlertList[0].id)\r\n            }, 2000)\r\n        }\r\n    }, [alertList?.length])\r\n\r\n    return (\r\n        <div className={styles.alert__block}>\r\n            {alertList?.map(el => {\r\n\r\n                return (\r\n                    <Alert\r\n                        className={styles.alert}\r\n                        severity={el.type}\r\n                        onClose={() => onCloseAlert(el.id)}\r\n                        key={el.id}\r\n                    >\r\n                        <AlertTitle>{el.title}</AlertTitle>\r\n                    </Alert>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {TextField, Button, Typography, Grid, Paper} from \"@material-ui/core\";\r\n\r\n\r\nexport type ErrorType = {\r\n    style: string\r\n    textSpan: string\r\n}\r\n\r\ntype TodoListPropTypes = {\r\n    addTask: (title: string) => void\r\n    status?: string\r\n}\r\n\r\nexport const AddItemForm = React.memo(({addTask, status}: TodoListPropTypes) => {\r\n\r\n    const [valueInput, setValueInput] = useState<string>('')\r\n    const [errorInput, setErrorInput] = useState<ErrorType>({\r\n        style: '',\r\n        textSpan: ''\r\n    })\r\n    const chengeInput = (e: ChangeEvent<HTMLInputElement>) => setValueInput(e.target.value)\r\n    const sendNewTask = () => {\r\n        if (valueInput.trim()) {\r\n            addTask(valueInput)\r\n            setValueInput('')\r\n        } else {\r\n            setErrorInput({\r\n                style: 'error',\r\n                textSpan: 'Error'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={3} style={{padding: '20px'}}>\r\n\r\n                <TextField className={errorInput.style}\r\n                           fullWidth\r\n                           disabled={status === 'loading'}\r\n                           margin=\"normal\"\r\n                           value={valueInput}\r\n                           onChange={chengeInput}\r\n                           onKeyPress={(e: KeyboardEvent<HTMLInputElement>) => {\r\n                               if (e.charCode === 13) sendNewTask()\r\n                               if (e.charCode !== 32) setErrorInput({style: '', textSpan: ''})\r\n                           }}/>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendNewTask} disabled={status === 'loading'}>Create Task</Button>\r\n                <Typography>{errorInput.textSpan}</Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n})","import React, {useState} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n\r\nexport const InputSpan = React.memo( ({text, onChengeTitleHendler}: any) => {\r\n    const [flag, setFlag] = useState(true)\r\n    const [newText, setNewText] = useState(text)\r\n\r\n    const chengeSpan = () => setFlag(false)\r\n    const chengeText = (e: any) => setNewText(e.target.value)\r\n\r\n    const chengeInput = (e: any) => {\r\n        if (e.charCode === 13 && newText.trim()) {\r\n            onChengeTitleHendler(newText)\r\n            setFlag(true)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {flag ?\r\n                <span onDoubleClick={chengeSpan}>{newText}</span>\r\n                :\r\n                <TextField onKeyPress={chengeInput} onChange={chengeText} value={newText} type=\"text\"/>\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\n","import {useActions} from \"../../../store/store\";\r\nimport {todolistActions} from \"../../../store\";\r\nimport React, {useCallback} from \"react\";\r\nimport {Drawer, Grid} from \"@material-ui/core\";\r\nimport {ItemForm} from \"../index\";\r\n\r\ntype NavBarPropsType = {\r\n    show: boolean\r\n    setValue: (value: boolean) => void\r\n}\r\n\r\nexport const NavBar = ({show, setValue}: NavBarPropsType) => {\r\n\r\n    const {addTodolistThunk} = useActions(todolistActions)\r\n\r\n    const addTodoList = useCallback((value: string) => {\r\n        addTodolistThunk(value)\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={'left'}\r\n            hideBackdrop={false}\r\n            onClose={() => setValue(false)}\r\n            open={show}\r\n        >\r\n            <Grid container spacing={10}>\r\n                <ItemForm.AddItemForm addTask={addTodoList}/>\r\n            </Grid>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\n","import {AppBar, Button, IconButton, LinearProgress, Toolbar, Typography} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, {useState} from \"react\";\r\nimport styles from './Header.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectors} from '../selectors'\r\nimport {useActions} from \"../../store/store\";\r\nimport {appActions} from \"../../store\";\r\nimport { Nav } from \"../common\";\r\n\r\n\r\nexport const Header: React.FC = () => {\r\n    const [value, setValue] = useState<boolean>(false)\r\n\r\n\r\n\r\n    const {logoutThunk} = useActions(appActions)\r\n\r\n    const progress = useSelector(selectors.progresSelector)\r\n\r\n    const auth = useSelector(selectors.authSelector)\r\n\r\n    const clickHendler = () => {\r\n        logoutThunk()\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={styles.header}>\r\n            <Nav.NavBar show={value} setValue={setValue}/>\r\n\r\n\r\n            <Toolbar className={styles.header__inner}>\r\n                <div className={styles.header__menu}>\r\n                    <IconButton className={styles.header__icon} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => setValue(true)}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h4\">\r\n                        Todolist\r\n                    </Typography>\r\n                </div>\r\n\r\n                {\r\n                    auth ?\r\n                        <Button\r\n                            className={styles.header__btn}\r\n                            color=\"inherit\"\r\n                            onClick={clickHendler}\r\n                        >\r\n                            Logout\r\n                        </Button>\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n            </Toolbar>\r\n            {progress && <LinearProgress className={styles.progressbar}/>}\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useCallback} from 'react';\r\nimport {Input} from \"../../../common\";\r\nimport {Button, Checkbox, CircularProgress, ListItem,} from '@material-ui/core';\r\n\r\nimport {TaskType} from \"../../../../store/tasks/tasksReducer\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n\r\nexport type TaskPropsType = {\r\n    id: string\r\n    item: TaskType\r\n    removeTask: (id: string, task: string) => void\r\n    chengeTaskTitle: (id: string, task: string, text: string) => void\r\n    chengeStatus: (id: string, task: string, status: number) => void\r\n}\r\n\r\n\r\nexport const Task = React.memo(({id, item, removeTask, chengeTaskTitle, chengeStatus}: TaskPropsType) => {\r\n\r\n    const onChengeTaskTitleHendler = useCallback((text: string) => {\r\n        chengeTaskTitle(id, item.id, text)\r\n    }, [id, item.id])\r\n\r\n    return (\r\n        <ListItem style={{display: 'flex', justifyContent: 'space-between'}}>\r\n            {\r\n                item.statusProcess === 'chengeStatus' ?\r\n                    <CircularProgress size={28}/>\r\n                    :\r\n                    item.status === 2 ?\r\n                        <Button\r\n                            disabled={item.statusProcess === 'loading'}\r\n                            onClick={() => chengeStatus(id, item.id, (item.status === 0) ? 2 : 0)}\r\n                        >\r\n                            <CheckIcon/>\r\n                        </Button>\r\n                        :\r\n                        <Checkbox\r\n                            disabled={item.statusProcess === 'loading'}\r\n                            onChange={() => chengeStatus(id, item.id, (item.status === 0) ? 2 : 0)}\r\n                            color=\"secondary\"\r\n                        />\r\n            }\r\n            <Input.InputSpan text={item.title} onChengeTitleHendler={onChengeTaskTitleHendler}/>\r\n            <Button\r\n                variant=\"outlined\"\r\n                disabled={item.statusProcess === 'loading'}\r\n                onClick={() => removeTask(id, item.id)}\r\n            >\r\n                <DeleteIcon/>\r\n            </Button>\r\n        </ListItem>\r\n    )\r\n})\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport style from './TodoList.module.scss';\r\nimport {Input, ItemForm} from \"../../common\"\r\nimport List from '@material-ui/core/List';\r\nimport {Button, ButtonGroup, Grid, Paper, Typography,} from '@material-ui/core';\r\nimport {FilterValuesType} from \"../../../store/todolist/todolistReducer\";\r\nimport {Task} from \"./task/Task\";\r\nimport {TaskType} from '../../../store/tasks/tasksReducer';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport {useActions} from \"../../../store/store\";\r\nimport {tasksActions} from \"../../../store\";\r\n\r\n\r\nexport type PropsTypeTodolist = {\r\n    id: string\r\n    title: string,\r\n    entiryStatus: string\r\n    tasks: Array<TaskType>,\r\n    chengeFilter: (id: string, value: FilterValuesType) => void\r\n    filter: FilterValuesType\r\n    chengeTitle: (id: string, text: string) => void\r\n    removeTodoList: (id: string) => void\r\n}\r\n\r\n\r\nexport const TodoList = React.memo(({\r\n                                        title,\r\n                                        tasks,\r\n                                        filter,\r\n                                        chengeFilter,\r\n                                        id,\r\n                                        chengeTitle,\r\n                                        removeTodoList,\r\n                                        entiryStatus\r\n                                    }: PropsTypeTodolist) => {\r\n\r\n    const {addTaskThunk, removeTaskThunk, updateTaskThunk, getTaskThunk} = useActions(tasksActions)\r\n\r\n    useEffect(() => {\r\n        getTaskThunk(id)\r\n    }, [id])\r\n\r\n\r\n    const onChengeTitleHendler = (text: string) => chengeTitle(id, text)\r\n\r\n    const addTask = useCallback((nameTask: string) => {\r\n        addTaskThunk({id, nameTask})\r\n    }, [id])\r\n\r\n    const removeTask = useCallback((id: string, taskId: string) => {\r\n        removeTaskThunk({id, taskId})\r\n    }, [id])\r\n\r\n    const chengeStatus = useCallback((id: string, taskId: string, status: number) => {\r\n        updateTaskThunk({id, taskId, update: {status}})\r\n    }, [id])\r\n\r\n\r\n    const chengeTaskTitle = (id: string, taskId: string, title: string) => {\r\n        updateTaskThunk({id, taskId, update: {title}})\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    let filterForTasks = tasks\r\n    if (filterForTasks) {\r\n        if (filter === 'active') {\r\n            filterForTasks = tasks.filter((item: any) => item.status === 0)\r\n        }\r\n        if (filter === 'complete') {\r\n            filterForTasks = tasks.filter((item: any) => item.status === 2)\r\n        }\r\n    }\r\n\r\n\r\n    const buttonFilter = (value: FilterValuesType, text: string) => {\r\n        return (\r\n            <Button color={filter === value ? 'secondary' : 'primary'}\r\n                    onClick={() => chengeFilter(id, value)}>{text}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid className={style.todolist} item >\r\n            <Paper elevation={3} style={{padding: '20px'}}>\r\n\r\n                <Typography variant=\"h3\"\r\n                            style={{display: 'flex', justifyContent: 'space-between', marginBottom: '20px'}}>\r\n\r\n                    <Input.InputSpan\r\n                        text={title}\r\n                        onChengeTitleHendler={onChengeTitleHendler}\r\n                    />\r\n                    <Button\r\n                        onClick={() => removeTodoList(id)}\r\n                        disabled={entiryStatus === 'loading'}\r\n                    >\r\n                        <DeleteOutlineIcon/>\r\n                    </Button>\r\n\r\n                </Typography>\r\n\r\n                <ItemForm.AddItemForm addTask={addTask} status={entiryStatus}/>\r\n\r\n                {filterForTasks === undefined ? null : filterForTasks.map(item => {\r\n\r\n\r\n                    return <List key={item.id}>\r\n\r\n                        <Task\r\n                            id={id}\r\n                            item={item}\r\n                            removeTask={removeTask}\r\n                            chengeTaskTitle={chengeTaskTitle}\r\n                            chengeStatus={chengeStatus}\r\n                        />\r\n                    </List>\r\n                })}\r\n\r\n                <ButtonGroup\r\n                    variant=\"text\"\r\n                    style={\r\n                        {\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            margin: '30px 0 0 0'\r\n                        }\r\n                    }>\r\n\r\n                    {buttonFilter('all', 'All')}\r\n                    {buttonFilter('active', 'Active')}\r\n                    {buttonFilter('complete', 'Completed')}\r\n\r\n                </ButtonGroup>\r\n\r\n\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n})\r\n\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport style from './CreateTodoList.module.scss'\r\nimport {ItemForm} from \"../../common\";\r\nimport {TodoList} from \"../tasks/TodoList\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {FilterValuesType} from \"../../../store/todolist/todolistReducer\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {selectors} from '../../selectors'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useActions} from \"../../../store/store\";\r\nimport {todolistActions} from '../../../store'\r\n\r\n\r\nexport const CreateTodoList = React.memo(() => {\r\n    let demo = false\r\n\r\n    const auth = useSelector(selectors.authSelector)\r\n    const todolistArray = useSelector(selectors.todolistArraySelector)\r\n    const allTasks = useSelector(selectors.allTaskSelector)\r\n\r\n    const {chengeNameTodolistThunk, removeTodolistThunk, getTodolistThunk, chengeFilterTodolistAction} = useActions(todolistActions)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!demo) {\r\n            getTodolistThunk()\r\n        }\r\n    }, [])\r\n\r\n\r\n    const chengeTitle = useCallback((id: string, text: string) => {\r\n        chengeNameTodolistThunk({id, text})\r\n    }, [todolistArray])\r\n\r\n    const removeTodoList = useCallback((id: string) => {\r\n        removeTodolistThunk(id)\r\n    }, [])\r\n\r\n\r\n    const chengeFilter = useCallback((todoListId: string, value: FilterValuesType) => {\r\n        chengeFilterTodolistAction({idTodolist: todoListId, newfilterTodolist: value})\r\n    }, [])\r\n\r\n\r\n    if (!auth) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.todolist}>\r\n\r\n            <Grid className={style.todolist__items} container spacing={10}>\r\n\r\n                {todolistArray.map((el: any) => {\r\n                    let filterForTasks = allTasks[el.id]\r\n\r\n                    return <TodoList\r\n                        key={el.id}\r\n                        id={el.id}\r\n                        title={el.title}\r\n                        tasks={filterForTasks}\r\n                        chengeFilter={chengeFilter}\r\n                        filter={el.filter}\r\n                        removeTodoList={removeTodoList}\r\n                        chengeTitle={chengeTitle}\r\n                        entiryStatus={el.entiryStatus}\r\n                    />\r\n                })}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from 'react';\r\nimport styles from './Login.module.scss';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    Paper,\r\n    Switch,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport {useFormik} from 'formik'\r\nimport {useSelector} from \"react-redux\";\r\nimport {useActions} from \"../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {selectors} from '../../selectors'\r\nimport {appActions} from \"../../../store\";\r\n\r\nexport type DataLogin = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: string\r\n    captcha?: boolean\r\n}\r\n\r\n\r\nexport const Login: React.FC = () => {\r\n    const auth = useSelector(selectors.authSelector)\r\n    const {loginThunk} = useActions(appActions)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememderMe: false\r\n        },\r\n        validate: (values) => {\r\n            if (!values.email.trim()) {\r\n                return {email: 'Email is required'}\r\n            }\r\n            if (!values.password.trim()) {\r\n                return {password: 'Password is required'}\r\n            }\r\n            if (values.password.trim().length < 8) {\r\n                return {password: 'Password is less than 8 characters'}\r\n            }\r\n        },\r\n        onSubmit: async (values) => {\r\n            await loginThunk(values)\r\n        },\r\n    });\r\n\r\n\r\n    if (auth) {\r\n        return <Redirect to={'/todolist'}/>\r\n    }\r\n\r\n    return (\r\n        <Grid container justify={\"center\"} alignItems={\"center\"}>\r\n            <Paper className={styles.login} elevation={3}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormControl>\r\n                        <FormLabel>Login</FormLabel>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label={'Email'}\r\n                                name={'email'}\r\n                                margin={\"normal\"}\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            {formik.errors.email && <div>{formik.errors.email}</div>}\r\n                            <TextField\r\n                                label={'Password'}\r\n                                margin={\"normal\"}\r\n                                name={'password'}\r\n                                // type={'password'}\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            {formik.errors.password && <div>{formik.errors.password}</div>}\r\n                            <FormControlLabel\r\n                                control={<Switch/>}\r\n                                label={'Remamder Me'}\r\n                                name={'rememberMe'}\r\n                                value={formik.values.rememderMe}\r\n                            />\r\n\r\n                            <Button\r\n                                disabled={formik.errors.email || formik.errors.password ? true : false}\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >Send</Button>\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { CreateTodoList } from './todolist/CreateTodoList';\r\nimport {Login} from \"./login/Login\";\r\n\r\n\r\n\r\n\r\nexport const Content: React.FC = () => {\r\n\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path={'/todolist'} component={CreateTodoList}/>\r\n                <Route path={'/'} component={Login}/>\r\n            </Switch>\r\n        </main>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {Header} from \"./components/header/Header\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {Content} from \"./components/content/Content\";\r\nimport loading from './styles/grid-1.1s-200px.svg'\r\n\r\nimport {selectors} from './components/selectors';\r\nimport {useActions} from \"./store/store\";\r\nimport {appActions} from \"./store\";\r\nimport {Alert} from './components/common'\r\n\r\n\r\nexport const App = () => {\r\n    const initial = useSelector(selectors.initialSelect)\r\n    const alertList = useSelector(selectors.alertSelect)\r\n\r\n   const {authMeThunk, removeAlertAction} = useActions(appActions)\r\n    useEffect(() => {\r\n        authMeThunk()\r\n    }, [])\r\n\r\n\r\n    const onCloseAlert = (id: string) => {\r\n        removeAlertAction({id})\r\n    }\r\n\r\n    if (!initial) {\r\n        return <div className=\"install_app\">\r\n            <img className=\"install_app__icon\" src={loading} alt=\" \"/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100vh'}}>\r\n            <Header/>\r\n            <div className=\"container\">\r\n                <Content/>\r\n            </div>\r\n            {/*<Footer/>*/}\r\n            <Alert.AlertComponent alertList={alertList} onCloseAlert={onCloseAlert}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport {App} from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './store/store';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__x8HgT\",\"install_app\":\"Header_install_app__LSKCf\",\"install_app__icon\":\"Header_install_app__icon__3P5vD\",\"header\":\"Header_header__zJoaA\",\"header__inner\":\"Header_header__inner__t3QNQ\",\"header__menu\":\"Header_header__menu__1UnAI\",\"header__icon\":\"Header_header__icon__2CtfG\",\"progressbar\":\"Header_progressbar__2T9AT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert__block\":\"alertComponent_alert__block__1M-bO\",\"alert\":\"alertComponent_alert__2tuKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolist\":\"CreateTodoList_todolist__1WVMI\",\"todolist__items\":\"CreateTodoList_todolist__items__KWT_c\"};"],"sourceRoot":""}